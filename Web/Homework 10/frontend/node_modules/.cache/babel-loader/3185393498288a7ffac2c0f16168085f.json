{"remainingRequest":"D:\\university trash\\wp9\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\university trash\\wp9\\frontend\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\university trash\\wp9\\frontend\\src\\App.vue","mtime":1545516359117},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Middle from './components/Middle';\nimport Footer from './components/Footer';\naxios.defaults.baseURL = '/api/1/';\nexport default {\n  name: 'app',\n  data: function data() {\n    return this.$root.$data;\n  },\n  components: {\n    Header: Header,\n    Middle: Middle,\n    Footer: Footer\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    this.$root.$on(\"onLogout\", function () {\n      localStorage.removeItem(\"token\");\n      _this.user = null;\n      axios.defaults.headers = {};\n    });\n    this.$root.$on(\"onEnter\", function (token) {\n      localStorage.setItem(\"token\", token);\n      axios.defaults.headers = {\n        Authorization: \"Bearer \" + token\n      };\n      axios.get(\"users/authenticated\").then(function (response) {\n        _this.user = response.data;\n        _this.userId = _this.user.id;\n\n        _this.$root.$emit(\"onEnterSuccess\");\n      });\n    });\n    this.$root.$on(\"onRegister\", function (login, name, password) {\n      axios.post('users', {\n        login: login,\n        name: name,\n        password: password\n      }).then(function (response) {\n        if (response.data['success']) {\n          _this.$root.$emit(\"onRegisterSuccess\");\n        } else {\n          _this.$root.$emit(\"onRegistrationError\", response.data['error'].join(\"\\r\\n\"));\n        }\n      });\n    });\n    this.$root.$on(\"onAddPost\", function (title, text) {\n      if (_this.userId) {\n        axios.post('posts', {\n          title: title,\n          text: text,\n          userId: _this.userId\n        }).then(function (response) {\n          if (response.data['success']) {\n            _this.$root.$emit(\"onAddPostSuccess\");\n          } else {\n            _this.$root.$emit(\"onAddPostValidationError\", response.data['error'].join(\"\\r\\n\"));\n          }\n        });\n      } else {\n        _this.$root.$emit(\"onAddPostValidationError\", \"No access\");\n      }\n    });\n    this.$root.$on(\"onEditPost\", function (id, title, text) {\n      if (_this.userId) {\n        if (!id) {\n          _this.$root.$emit(\"onEditPostValidationError\", \"ID is invalid\");\n        } else if (!text) {\n          _this.$root.$emit(\"onEditPostValidationError\", \"Text is invalid\");\n        } else {\n          axios.post('edit', {\n            id: id,\n            title: title,\n            text: text\n          }).then(function (response) {\n            if (response.data['success']) {\n              _this.$root.$emit(\"onEditPostSuccess\");\n            } else {\n              _this.$root.$emit(\"onEditPostValidationError\", response.data['error'].join(\"\\r\\n\"));\n            }\n          });\n        }\n      } else {\n        _this.$root.$emit(\"onEditPostValidationError\", \"No access\");\n      }\n    });\n  },\n  beforeMount: function beforeMount() {\n    if (localStorage.getItem(\"token\") && !this.user) {\n      this.$root.$emit(\"onEnter\", localStorage.getItem(\"token\"));\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!--suppress HtmlUnknownTag -->\n    <body id=\"app\">\n    <Header :user=\"user\"/>\n    <Middle/>\n    <Footer/>\n    </body>\n</template>\n\n<script>\n    import axios from 'axios';\n    import Header from './components/Header'\n    import Middle from './components/Middle'\n    import Footer from './components/Footer'\n\n    axios.defaults.baseURL = '/api/1/';\n\n    export default {\n        name: 'app',\n        data: function () {\n            return this.$root.$data;\n        },\n        components: {\n            Header,\n            Middle,\n            Footer\n        }, beforeCreate() {\n            this.$root.$on(\"onLogout\", () => {\n                localStorage.removeItem(\"token\");\n                this.user = null;\n                axios.defaults.headers = {};\n            });\n            this.$root.$on(\"onEnter\", (token) => {\n                localStorage.setItem(\"token\", token);\n                axios.defaults.headers = {\n                    Authorization: \"Bearer \" + token\n                };\n                axios.get(\"users/authenticated\").then(response => {\n                    this.user = response.data;\n                    this.userId = this.user.id;\n                    this.$root.$emit(\"onEnterSuccess\");\n                });\n            });\n            this.$root.$on(\"onRegister\", (login, name, password) => {\n                axios.post('users', {\n                    login: login, name: name, password: password,\n                }).then(response => {\n                    if (response.data['success']) {\n                        this.$root.$emit(\"onRegisterSuccess\");\n                    } else {\n                        this.$root.$emit(\"onRegistrationError\", response.data['error'].join(\"\\r\\n\"));\n                    }\n                });\n            });\n            this.$root.$on(\"onAddPost\", (title, text) => {\n                if (this.userId) {\n                    axios.post('posts', {\n                        title: title, text: text, userId: this.userId,\n                    }).then(response => {\n                        if (response.data['success']) {\n                            this.$root.$emit(\"onAddPostSuccess\");\n                        } else {\n                            this.$root.$emit(\"onAddPostValidationError\", response.data['error'].join(\"\\r\\n\"));\n                        }\n                    });\n                } else {\n                    this.$root.$emit(\"onAddPostValidationError\", \"No access\");\n                }\n            });\n            this.$root.$on(\"onEditPost\", (id, title, text) => {\n                if (this.userId) {\n                    if (!id) {\n                        this.$root.$emit(\"onEditPostValidationError\", \"ID is invalid\");\n                    } else if (!text) {\n                        this.$root.$emit(\"onEditPostValidationError\", \"Text is invalid\");\n                    } else {\n                        axios.post('edit', {\n                            id: id, title: title, text: text,\n                        }).then(response => {\n                            if (response.data['success']) {\n                                this.$root.$emit(\"onEditPostSuccess\");\n                            } else {\n                                this.$root.$emit(\"onEditPostValidationError\", response.data['error'].join(\"\\r\\n\"));\n                            }\n                        });\n                    }\n                } else {\n                    this.$root.$emit(\"onEditPostValidationError\", \"No access\");\n                }\n            });\n        }, beforeMount() {\n            if (localStorage.getItem(\"token\") && !this.user) {\n                this.$root.$emit(\"onEnter\", localStorage.getItem(\"token\"));\n            }\n        },\n    }\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src"}]}
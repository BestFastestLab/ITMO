{"remainingRequest":"D:\\university trash\\wp9\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\university trash\\wp9\\frontend\\src\\components\\Middle.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\university trash\\wp9\\frontend\\src\\components\\Middle.vue","mtime":1545520224673},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Index from './middle/Index';\nimport Enter from './middle/Enter';\nimport Register from './middle/Register';\nimport AddPost from './middle/AddPost';\nimport SidebarPost from './SidebarPost';\nimport EditPost from './middle/EditPost';\nimport Users from './middle/Users';\nimport Posts from './middle/Posts';\nimport Post from './middle/Post';\nimport axios from 'axios';\nexport default {\n  name: \"Middle\",\n  data: function data() {\n    return {\n      page: \"Index\",\n      posts: {},\n      postId: undefined\n    };\n  },\n  computed: {\n    viewPosts: function viewPosts() {\n      return Object.values(this.posts).sort(function (a, b) {\n        return b.id - a.id;\n      }).slice(0, 2);\n    }\n  },\n  components: {\n    EditPost: EditPost,\n    Index: Index,\n    Enter: Enter,\n    Register: Register,\n    SidebarPost: SidebarPost,\n    AddPost: AddPost,\n    Users: Users,\n    Posts: Posts,\n    Post: Post\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    this.$root.$on(\"onChangePage\", function (page) {\n      _this.page = page;\n    });\n    this.$root.$on(\"onChangePost\", function (postId) {\n      _this.postId = postId;\n      _this.page = 'Post';\n    });\n  },\n  beforeMount: function beforeMount() {\n    var _this2 = this;\n\n    axios.get('posts').then(function (response) {\n      _this2.posts = response.data;\n    });\n  }\n};",{"version":3,"sources":["Middle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,QAAA,MAAA,mBAAA;AACA,OAAA,OAAA,MAAA,kBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,QAAA,MAAA,mBAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,IAAA,MAAA,eAAA;AAEA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA;AAHA,GATA;AAcA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,KAAA,EAAA,KAHA;AAIA,IAAA,QAAA,EAAA,QAJA;AAKA,IAAA,WAAA,EAAA,WALA;AAMA,IAAA,OAAA,EAAA,OANA;AAOA,IAAA,KAAA,EAAA,KAPA;AAQA,IAAA,KAAA,EAAA,KARA;AASA,IAAA,IAAA,EAAA;AATA,GAdA;AAyBA,EAAA,YAzBA,0BAyBA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,cAAA,EAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,KAFA;AAGA,SAAA,KAAA,CAAA,GAAA,CAAA,cAAA,EAAA,UAAA,MAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,MAAA;AACA,KAHA;AAIA,GAjCA;AAkCA,EAAA,WAlCA,yBAkCA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAFA;AAGA;AAtCA,CAAA","sourcesContent":["<template>\r\n    <div class=\"middle\">\r\n        <aside>\r\n            <SidebarPost v-for=\"post in viewPosts\" :post=\"post\" :key=\"post.id\"/>\r\n        </aside>\r\n        <main>\r\n            <Index v-if=\"page === 'Index'\"/>\r\n            <Enter v-if=\"page === 'Enter'\"/>\r\n            <Register v-if=\"page === 'Register'\"/>\r\n            <AddPost v-if=\"page === 'AddPost'\"/>\r\n            <EditPost v-if=\"page === 'EditPost'\"/>\r\n            <Users v-if=\"page === 'Users'\"/>\r\n            <Posts :posts=\"posts\" v-if=\"page === 'Posts'\"/>\r\n            <Post :postId=\"postId\" v-if=\"page === 'Post'\"/>\r\n        </main>\r\n    </div>\r\n</template>\r\n<script>\r\n    import Index from './middle/Index';\r\n    import Enter from './middle/Enter';\r\n    import Register from './middle/Register';\r\n    import AddPost from './middle/AddPost';\r\n    import SidebarPost from './SidebarPost';\r\n    import EditPost from './middle/EditPost';\r\n    import Users from './middle/Users';\r\n    import Posts from './middle/Posts';\r\n    import Post from './middle/Post';\r\n\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: \"Middle\",\r\n        data: function () {\r\n            return {\r\n                page: \"Index\",\r\n                posts: {},\r\n                postId: undefined,\r\n            }\r\n        },\r\n        computed: {\r\n            viewPosts: function () {\r\n                return Object.values(this.posts).sort((a, b) => b.id - a.id).slice(0, 2);\r\n            }\r\n        },\r\n        components: {\r\n            EditPost,\r\n            Index,\r\n            Enter,\r\n            Register,\r\n            SidebarPost,\r\n            AddPost,\r\n            Users,\r\n            Posts,\r\n            Post,\r\n        },\r\n        beforeCreate() {\r\n            this.$root.$on(\"onChangePage\", page => {\r\n                this.page = page;\r\n            });\r\n            this.$root.$on(\"onChangePost\", postId => {\r\n                this.postId = postId;\r\n                this.page = 'Post'\r\n            })\r\n        },\r\n        beforeMount() {\r\n            axios.get('posts').then((response) => {\r\n                this.posts = response.data;\r\n            });\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}
{"remainingRequest":"D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\university trash\\wp9\\frontend\\src\\components\\middle\\Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\university trash\\wp9\\frontend\\src\\components\\middle\\Post.vue","mtime":1545525188951},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\university trash\\wp9\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Article from \"./Article\";\nimport axios from 'axios'\n\nexport default {\n    name: \"Post\",\n    components: { Article },\n    props: ['postId'],\n    data: function() {\n        return {\n            post: {},\n            comments: {},\n            error: \"\",\n            text: \"\",\n        }\n    },\n    methods: {\n        onAddComment() {\n            this.$root.$emit(\"onAddComment\", this.post.id, this.text);\n        },\n        init() {\n            axios.get(\"post\", {params: {id: this.postId}}).then(response => this.post = response.data);\n            axios.get(\"comments\", {params: {postId: this.postId}}).then(response => this.comments = response.data);\n        }\n    },\n    watch: {\n        post : function () {\n            axios.get(\"post\", {params: {id: this.postId}}).then(response => this.post = response.data);\n        },\n        comments: function () {\n            axios.get(\"comments\", {params: {postId: this.postId}}).then(response => this.comments = response.data);\n        }\n    },\n    beforeMount() {\n        this.$root.$on(\"onAddCommentValidationError\", error => this.error = error);\n        this.text = this.error = \"\";\n    },\n    mounted () {\n        this.init();\n    },\n}\n",{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src\\components\\middle","sourcesContent":["<template>\r\n    <div>\r\n        <Article :post=\"post\"/>\r\n        <h1>Comments</h1>\r\n        <div style=\"padding-left: 2em\">\r\n            <article v-for=\"comment in comments\" :comment=\"comment\" :key=\"comment.id\">\r\n                <div class=\"information\">By {{ comment.author.login }}</div>\r\n                <div class=\"body\">{{ comment.text }}</div>\r\n            </article>\r\n        </div>\r\n        <div class=\"form-box\">\r\n            <div class=\"header\">New comment</div>\r\n            <div class=\"body\">\r\n                <form method=\"post\" @submit.prevent=\"onAddComment\">\r\n                    <div class=\"field\">\r\n                        <div class=\"name\">\r\n                            <label for=\"text\">Text</label>\r\n                        </div>\r\n                        <div class=\"value\">\r\n                            <textarea id=\"text\" rows=\"10\" name=\"text\" v-model=\"text\"></textarea>\r\n                        </div>\r\n                        <div class=\"error\"><pre>{{ error }}</pre></div>\r\n                    </div>\r\n                    <div class=\"button-field\">\r\n                        <input type=\"submit\" value=\"Add\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Article from \"./Article\";\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: \"Post\",\r\n        components: { Article },\r\n        props: ['postId'],\r\n        data: function() {\r\n            return {\r\n                post: {},\r\n                comments: {},\r\n                error: \"\",\r\n                text: \"\",\r\n            }\r\n        },\r\n        methods: {\r\n            onAddComment() {\r\n                this.$root.$emit(\"onAddComment\", this.post.id, this.text);\r\n            },\r\n            init() {\r\n                axios.get(\"post\", {params: {id: this.postId}}).then(response => this.post = response.data);\r\n                axios.get(\"comments\", {params: {postId: this.postId}}).then(response => this.comments = response.data);\r\n            }\r\n        },\r\n        watch: {\r\n            post : function () {\r\n                axios.get(\"post\", {params: {id: this.postId}}).then(response => this.post = response.data);\r\n            },\r\n            comments: function () {\r\n                axios.get(\"comments\", {params: {postId: this.postId}}).then(response => this.comments = response.data);\r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.$root.$on(\"onAddCommentValidationError\", error => this.error = error);\r\n            this.text = this.error = \"\";\r\n        },\r\n        mounted () {\r\n            this.init();\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}